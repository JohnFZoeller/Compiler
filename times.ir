
# multiplication table:
# for i = 1 .. n
#   for j = 1 .. n
#     print i * j, "\t"
#   print "\n"


	# No need to initalize i, it's pre-initialized to 1.

loop1:

        # done if i == 11
        load_label i
        load_mem_int
        load_label eleven
        load_mem_int
        sub
        load_label done1
        branch_zero

        # initialize j
        load1
        load_label j
        store_mem_int

loop2:
        # done if j == 11
        load_label j
        load_mem_int
        load_label eleven
        load_mem_int
        sub
        load_label done2
        branch_zero

        # print i * j
        load_label i
        load_mem_int
        load_label j
        load_mem_int
        mul
        print_int

        # print "\t"
        load_label tab
        load_mem_int
        print_byte

        # increment j
        load_label j
        load_mem_int
        load1
        add
        load_label j
        store_mem_int

        load_label loop2
        branch

done2:

        # print "\n"
        load_label newline
        load_mem_int
        print_byte

        # increment i
        load_label i
        load_mem_int
        load1
        add
        load_label i
        store_mem_int

        load_label loop1
        branch

done1:
        load0
        exit

i:
        int_literal 1
j:
        int_literal 0

eleven:
        int_literal 11

newline:
        int_literal 10
tab:
        int_literal 9