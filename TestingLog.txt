/*all of these work from lexing to ir gen*/



/*record testing*/
var a record b byte, c int32, d record f int32 end end;

/*array testing*/

var john int32[3];

/*expression testing*/

var john = 4;
var fred = john + 3;

/*function testing*/


function nancy(b int32) int32{
	var ret = b;
	return ret;
}

var ok = nancy(4);


function nancy(b int32, c float64, d int32) int32{
	var ret = b;
	return ret;
}

var ok = nancy(4, 3.0, 2);

function nancy(b int32, c float64, d int32) float64{
	var ret = b;
	return ret;
}

var ok = nancy(4, 3.0, 2);


/*if loop testing*/
var lol = 2;
var poo = 8;
var eric int32;

if(poo == lol){
	eric = 2;
}

var john = 4;
var eric int32;
var poop = 4;

if(john == poop){
	eric = 1;
}
if(john != poop){
	eric = 1;
}
if(john <= poop){
	eric = 1;
}
if(john >= poop){
	eric = 1;
}
if(john > poop){
	eric = 1;
}
if(john < poop){
	eric = 1;
}


if(john != poop){
	eric = 1;
} else{
	eric = 2;
}

/*while*/
var john = 2;
var poop = 4;

while(john != poop){
	john = john + 1;
}

/*for*/
var john int32;
var poop = 4;

for(john = 0; john < poop; john = john + 2){
	poop = poop + 1;
}

/*for nested if*/
var john int32;
var poop = 4;

for(john = 0; john < poop; john = john + 2){
	if(4 == 4){
		poop = poop + 1;
	}
}


